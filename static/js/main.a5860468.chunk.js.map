{"version":3,"sources":["components/colour-block.js","components/palette.js","core/utils/index.js","containers/App.js","index.js","core/reducer.js","core/store/configureStore.prod.js","core/ui/actions.js","core/ui/action-types.js","core/ui/reducer.js","core/ui/selectors.js","core/store/configureStore.js"],"names":["StyledColourBlock","styled","div","props","colour","isDark","tinycolor","lighten","darken","ColourBlock","this","onClick","console","log","React","PureComponent","StyledPalette","Palette","$","document","on","e","tag","target","tagName","toLowerCase","which","palette","color1","random","color2","toHexString","mix","generateRandomPalette","setPalette","map","i","key","Component","mapStateToProps","createSelector","getPalette","mapDispatchToProps","Object","assign","connect","App","className","store","configureStore","ReactDOM","render","getElementById","rootReducer","combineReducers","ui","uiReducer","initialState","createStore","compose","applyMiddleware","thunk","type","payload","state","slice","index","color","getUI","module","exports","require"],"mappings":"glBAIA,IAAMA,EAAoBC,IAAOC,IAAV,KASnB,SAACC,GAAD,kCACcA,EAAMC,OADpB,0BAGED,EAAME,OACFC,IAAUH,EAAMC,QAAQG,QAAQ,IAChCD,IAAUH,EAAMC,QAAQI,OAAO,IALrC,YAuBWC,E,uKAZH,IACAL,EAAWM,KAAKP,MAAhBC,OACFC,EAASC,IAAUF,GAAQC,SAEjC,OACE,kBAACL,EAAD,CAAmBI,OAAQA,EAAQC,OAAQA,EAAQM,QAAS,WAAKC,QAAQC,IAAI,WAC3E,4BAAKT,Q,GAPaU,IAAMC,e,yJCbhC,IAAMC,EAAgBf,IAAOC,IAAV,KAMbe,E,kLAEiB,IAAD,OAClBC,IAAEC,UAAUC,GAAG,WAAW,SAAAC,GACxB,IAAMC,EAAMD,EAAEE,OAAOC,QAAQC,cAC7B,GAAW,UAARH,GAA2B,aAARA,GAIP,KAAZD,EAAEK,MAAc,CACjB,IAAMC,ECxBP,WACL,IAAMC,EAAStB,IAAUuB,SACnBC,EAASxB,IAAUuB,SASzB,MAPgB,CACdD,EAAOG,cACPzB,IAAU0B,IAAIJ,EAAQE,EAAQ,IAAIC,cAClCzB,IAAU0B,IAAIJ,EAAQE,EAAQ,IAAIC,cAClCzB,IAAU0B,IAAIJ,EAAQE,EAAQ,IAAIC,cAClCD,EAAOC,eDeaE,GAChB,EAAK9B,MAAM+B,WAAWP,S,+BAKlB,IACAA,EAAYjB,KAAKP,MAAjBwB,QAER,OACE,kBAACX,EAAD,KACGW,EAAQQ,KAAI,SAAC/B,EAAQgC,GAAT,OACX,kBAAC,EAAD,CAAahC,OAAQA,EAAQiC,IAAKD,Y,GAtBtBtB,IAAMwB,WA6BtBC,EAAkBC,yBACtBC,KACA,SAACd,GAAD,MAAc,CACZA,cAGEe,EAAqBC,OAAOC,OAAO,CAACV,iBAC3BW,oBAAQN,EAAiBG,EAAzBG,CAA6C5B,GEtC7C6B,E,uKATX,OACE,yBAAKC,UAAU,OACb,0BAAMA,UAAU,WAAhB,kBACA,kBAAC,EAAD,W,GALUT,aCQZU,G,cAAQC,OAEdC,IAASC,OACP,kBAAC,WAAD,CAAUH,MAAOA,GACf,kBAAC,EAAD,CAAKA,MAAOA,KAEd7B,SAASiC,eAAe,U,oGCVXC,EAJKC,0BAAgB,CAClCC,GAAIC,M,SCAS,SAASP,EAAeQ,GAOrC,OANcC,sBACZL,EACAI,EACAE,kBAAQC,0BAAgBC,S,sICNrB,SAAS3B,EAAWP,GACzB,MAAO,CACLmC,KCJuB,cDKvBC,QAASpC,G,YECN,SAAS6B,IAA+C,IAArCQ,EAAoC,uDAJvC,CACrBrC,QAAS,CAAC,UAAU,UAAU,UAAU,UAAU,YAGU,yCAAhBoC,EAAgB,EAAhBA,QAASD,EAAO,EAAPA,KACrD,OAAQA,GACN,IDRuB,cCSrB,OAAOnB,OAAOC,OAAO,GAAIoB,EAAO,CAC9BrC,QAASoC,IAGb,IDZqB,YCanB,OAAOpB,OAAOC,OAAO,GAAIoB,EAAO,CAC9BrC,QAAQ,GAAD,mBACFqC,EAAMrC,QAAQsC,MAAM,EAAGF,EAAQG,QAD7B,CAELH,EAAQI,OAFH,YAGFH,EAAMrC,QAAQsC,MAAMF,EAAQG,MAAQ,OAI7C,QACE,OAAOF,GCnBN,SAASvB,EAAWuB,GACzB,OALK,SAAeA,GACpB,OAAOA,EAAMT,GAINa,CAAMJ,GAAOrC,U,mBCJpB0C,EAAOC,QAAUC,EAAQ,O","file":"static/js/main.a5860468.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport tinycolor from \"tinycolor2\";\n\nconst StyledColourBlock = styled.div`\n  height: 100%;\n  flex: auto;\n  display: flex;\n  padding: 20px;\n  justify-content: center;\n  align-items: flex-end;\n  font-weight: bold;\n  text-transform: uppercase;\n  ${(props) => `\n    background: ${props.colour};\n    colour: ${\n      props.isDark\n        ? tinycolor(props.colour).lighten(25)\n        : tinycolor(props.colour).darken(25)\n    };\n  `};\n`;\n\nclass ColourBlock extends React.PureComponent {\n  render() {\n    const { colour } = this.props;\n    const isDark = tinycolor(colour).isDark();\n\n    return (\n      <StyledColourBlock colour={colour} isDark={isDark} onClick={()=>{console.log('click')}}>\n        <h3>{colour}</h3>\n      </StyledColourBlock>\n    );\n  }\n}\n\nexport default ColourBlock;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport styled from 'styled-components';\nimport ColourBlock from './colour-block';\nimport $ from 'jquery';\n\nimport { generateRandomPalette } from '../core/utils';\nimport { getPalette, setPalette } from '../core/ui';\n\nconst StyledPalette = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100vh;\n`;\n\nclass Palette extends React.Component {\n\n  componentDidMount() {\n    $(document).on('keydown', e => {\n      const tag = e.target.tagName.toLowerCase();\n      if(tag === 'input' || tag === 'textarea') {\n        return;\n      }\n\n      if(e.which === 32) {\n        const palette = generateRandomPalette();\n        this.props.setPalette(palette);\n      }\n    })\n  }\n\n  render() {\n    const { palette } = this.props;\n\n    return (\n      <StyledPalette>\n        {palette.map((colour, i) => (\n          <ColourBlock colour={colour} key={i} />\n        ))}\n      </StyledPalette>\n    )\n  }\n}\n\nconst mapStateToProps = createSelector(\n  getPalette,\n  (palette) => ({\n    palette,\n  })\n)\nconst mapDispatchToProps = Object.assign({setPalette});\nexport default connect(mapStateToProps, mapDispatchToProps)(Palette);","import tinycolor from 'tinycolor2';\n\nexport function generateRandomPalette() {\n  const color1 = tinycolor.random();\n  const color2 = tinycolor.random();\n\n  const palette = [\n    color1.toHexString(),\n    tinycolor.mix(color1, color2, 25).toHexString(),\n    tinycolor.mix(color1, color2, 50).toHexString(),\n    tinycolor.mix(color1, color2, 75).toHexString(),\n    color2.toHexString(),\n  ]\n  return palette;\n}","import React, { Component } from \"react\";\nimport Palette from \"../components/palette\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <span className=\"overlay\">Press Spacebar</span>\n        <Palette />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from './core/store/configureStore'; \nimport App from './containers/App';\n\n// styles\nimport '../node_modules/normalize.css/normalize.css';\nimport './styles/main.css'; \n\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App store={store}/>\n  </Provider>,\n  document.getElementById('root')\n);\n","import { combineReducers } from 'redux';\nimport { uiReducer } from './ui';\n\nconst rootReducer = combineReducers({\n  ui: uiReducer,\n});\n\nexport default rootReducer;\n","import {compose, createStore, applyMiddleware} from 'redux';\nimport rootReducer from '../reducer';\nimport thunk from 'redux-thunk';\n\nexport default function configureStore(initialState) {\n  const store = createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(thunk))\n  );\n\n  return store;\n}\n","import * as types from './action-types';\n\nexport function setPalette(palette) {\n  return {\n    type: types.SET_PALETTE,\n    payload: palette,\n  }\n}\n\nexport function setColor(color, index) {\n  return {\n    type: types.SET_COLOR,\n    payload: { color, index },\n  };\n}","export const SET_PALETTE = 'SET_PALETTE';\nexport const SET_COLOR = 'SET_COLOR';\n","import * as types from './action-types';\n\nconst uiState = () => ({\n  palette: ['#169E7D','#4BAE95','#81BEAD','#B6CDC4','#EBDDDC'],\n});\n\nexport function uiReducer(state = uiState(), {payload, type}) {\n  switch (type) {\n    case types.SET_PALETTE:\n      return Object.assign({}, state, {\n        palette: payload,\n      });\n\n    case types.SET_COLOR:\n      return Object.assign({}, state, {\n        palette: [\n          ...state.palette.slice(0, payload.index),\n          payload.color,\n          ...state.palette.slice(payload.index + 1)\n        ]\n      });\n\n    default: \n      return state;\n\n  }\n}","export function getUI(state) {\n  return state.ui;\n}\n\nexport function getPalette(state) {\n  return getUI(state).palette;\n}","if (process.env.NODE_ENV === 'production') {\n  module.exports = require('./configureStore.prod');\n} else {\n  module.exports = require('./configureStore.dev');\n}\n"],"sourceRoot":""}